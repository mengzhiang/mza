<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
	

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.mengzhiang.*" />
	<!-- 
			<bean id="hello" class="com.neusoft.struts2.user.action.UserAction"/>  
		-->
	<!--
	org.springframework.jdbc.datasource.DriverManagerDataSource 是直连，不是连接池，所以需要换一个。
	class="com.mchange.v2.c3p0.ComboPooledDataSource" 是c3p0的
	不使用连接池的配置
		<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="url" value="jdbc:mysql://localhost:3306/bbs"></property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
	</bean>

	-->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bbs"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123456"></property>
        <property name="maxPoolSize" value="200"/>  
        <property name="minPoolSize" value="1"/>  
        <property name="initialPoolSize" value="1"/>   
        <property name="maxIdleTime" value="1"/>  
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- 可以使用getCurrentSession方法来做 
					<prop key="hibernate.current_session_context_class">thread</prop>-->
			</props>
		</property>
		
		<property name="packagesToScan" value="com.mengzhiang.*.*.model,com.mengzhiang.*.*.*.model"/>
		<!--
			 value只能中间写*最后不能写.*
			 <property name="packagesToScan" value="com.neusoft.struts2.*.model"/>

			<property name="annotatedClasses">
				  <list>                 
					<value>com.neusoft.struts2.user.model.User</value>   
				  </list>
			</property> 
			<property name="annotatedPackages">
				<list>
					<value>com.neusoft</value>
				   </list>
			</property>
			 <property name="packagesToScan" value="com.neusoft.struts2.user.model.*"/>
			<property name="mappingResources">
				<list>
					<value>com/neusoft/struts2/user/model/User.hbm.xml</value>
				</list>
			</property>
			 --> 
	</bean>
	<!--使用HibernateTemlate来做持久层的工作-->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<!--事务配置-->
	<bean id="transactionManager"  
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
		<property name="sessionFactory" ref="sessionFactory" />  
	</bean>  
	<!--如果采用XML配置则用下面的配置-->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.mengzhiang.*.*.service.*Impl.*(..))"
			advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* com.mengzhiang.*.*.*.service.*Impl.*(..))"
			advice-ref="txAdvice"/>
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 如果采用标注则去掉上面的配置，同时加入下面一行 
		<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> 
	-->
	
	<aop:aspectj-autoproxy/>
</beans>
